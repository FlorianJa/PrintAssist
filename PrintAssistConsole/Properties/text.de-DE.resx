<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="activated" xml:space="preserve">
    <value>aktiviert</value>
  </data>
  <data name="CalibrationFinished" xml:space="preserve">
    <value>Die Kalibrierung ist abgeschlossen. Der Drucker heizt auf seine finale Betriebstempertur auf. Es geht gleich los.</value>
  </data>
  <data name="CancelExplanation" xml:space="preserve">
    <value>Erklärung abbrechen</value>
  </data>
  <data name="CurrentState" xml:space="preserve">
    <value>Aktueller Status:</value>
  </data>
  <data name="deactivated" xml:space="preserve">
    <value>deaktiviert</value>
  </data>
  <data name="greeting" xml:space="preserve">
    <value>Hi. Ich bin dein persönlicher 3D Druckassistent. Ich kann dir den Drucker und den 3D Druck Workflow erklären, 3D Modelle im Internet für dich suchen, Modelle für den Drucker vorbereiten und den Druck starten.</value>
  </data>
  <data name="GuidedFineDetails" xml:space="preserve">
    <value>Für feine Details veringere ich die Druckgeschwindigkeit etwas.</value>
  </data>
  <data name="GuidedMoreInfill" xml:space="preserve">
    <value>Mehr Infill wird die Stabilität des Objets erhöhen.</value>
  </data>
  <data name="GuidedNoFineDetails" xml:space="preserve">
    <value>Okay, dann können wir mit normaler Druckgegeschwindigkeit drucken.</value>
  </data>
  <data name="GuidedNormalInfill" xml:space="preserve">
    <value>Okay, dann reicht ein geringerer Füllgrad von 15%.</value>
  </data>
  <data name="GuidedSupportOff" xml:space="preserve">
    <value>Bei Objekten ohne Überhängen können Supportstrukturen deaktiviert werden.</value>
  </data>
  <data name="GuidedSupportOn" xml:space="preserve">
    <value>Bei Objekten mit Überhängen sollten Supportstrukturen aktiviert werden.</value>
  </data>
  <data name="GuidedSurfaceNormal" xml:space="preserve">
    <value>Okay, dann reicht eine höhere Schichthöhe von 0,25 mm</value>
  </data>
  <data name="GuidedSurfaceSmooth" xml:space="preserve">
    <value>Für eine glatte Oberfläche wähle ich eine geringe Schichthöhe von 0,1 mm.</value>
  </data>
  <data name="HardwareTutorialFilePath" xml:space="preserve">
    <value>.\BotContent\HardwareTutorial_de.json</value>
  </data>
  <data name="Homing" xml:space="preserve">
    <value>Der Druck fährt nun zu seiner Startposition und führt anschließend seine automatische Kalibrierung aus.</value>
  </data>
  <data name="InfillPercentage" xml:space="preserve">
    <value>Füllgrad</value>
  </data>
  <data name="InvalidInfillPercentage" xml:space="preserve">
    <value>Deine Eingabe nicht gültig. Das Infill muss zwischen 0% und 100% betragen.</value>
  </data>
  <data name="InvalidInfillPercentageFormat" xml:space="preserve">
    <value>Bitte wähle eine Füllmenge aus der Auswahl unten aus oder gibt die Zahl in Prozent ein.</value>
  </data>
  <data name="InvalidLayerHeight" xml:space="preserve">
    <value>Deine Eingabe nicht gültig. Die Layer Height muss zwischen 0,05 mm und 0.3 mm betragen.</value>
  </data>
  <data name="InvalidLayerHeightFormat" xml:space="preserve">
    <value>Bitte wähle eine Layer Height aus der Auswahl unten aus oder gibt die Zahl in Millimeter ein.</value>
  </data>
  <data name="InvalidProfile" xml:space="preserve">
    <value>Ungültiges Profil.</value>
  </data>
  <data name="LayerHeight" xml:space="preserve">
    <value>Schichthöhe</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Weiter</value>
  </data>
  <data name="Nozzle" xml:space="preserve">
    <value>Düse</value>
  </data>
  <data name="ParameterSummary" xml:space="preserve">
    <value>Übersicht zu den wichtigsten Parametern:</value>
  </data>
  <data name="PrintDuration" xml:space="preserve">
    <value>Druckdauer</value>
  </data>
  <data name="PrintStarting" xml:space="preserve">
    <value>Es geht los!</value>
  </data>
  <data name="Progress" xml:space="preserve">
    <value>Fortschritt</value>
  </data>
  <data name="RemainingTime" xml:space="preserve">
    <value>Restliche Druckdauer</value>
  </data>
  <data name="SliceNowQuestion" xml:space="preserve">
    <value>Möchtest du die Datei jetzt slicen und drucken?</value>
  </data>
  <data name="SlicingDialogDataPath" xml:space="preserve">
    <value>.\BotContent\SlicingProcess_de.json</value>
  </data>
  <data name="SlicingFinished" xml:space="preserve">
    <value>Slicing abgeschlossen.</value>
  </data>
  <data name="SlicingInProgress" xml:space="preserve">
    <value>Slicing läuft</value>
  </data>
  <data name="SlicingModeSelection" xml:space="preserve">
    <value>Bitte wähe einen Slicingmode aus [Expert/Beginner] oder sag abbrechen, wenn du den Vorgang abbrechen möchtest.</value>
  </data>
  <data name="StartIdleMessage" xml:space="preserve">
    <value>Was kann ich für dich tun?</value>
  </data>
  <data name="StlRecieved" xml:space="preserve">
    <value>Ich hab dein Modell erhalten. Möchtest du das Modell jetzt slicen?</value>
  </data>
  <data name="StoringFile" xml:space="preserve">
    <value>Okay, ich passe auf die Datei auf. Du kannst mich später nochmal fragen.</value>
  </data>
  <data name="Support" xml:space="preserve">
    <value>Supportstrukturen</value>
  </data>
  <data name="SupportIs" xml:space="preserve">
    <value>Supportstrukturen</value>
  </data>
  <data name="UsedFilament" xml:space="preserve">
    <value>Benötigtes Filament</value>
  </data>
  <data name="WorkflowTutorialFilePath" xml:space="preserve">
    <value>.\BotContent\WorkflowTutorial_de.json</value>
  </data>
</root>